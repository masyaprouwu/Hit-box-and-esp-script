local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

-- Настройки подсветки
local HighlightSettings = {
    Distance = 100,
    Color = Color3.fromRGB(255, 255, 255),
    UsePlayerColor = false,
    Active = false,
    Transparency = 0.3,
    HighlightR6 = true,
    HighlightR15 = true
}

-- Списки частей тела
local R6BodyParts = {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"}
local R15BodyParts = {
    "Head", "UpperTorso", "LowerTorso", "LeftUpperArm", "LeftLowerArm", "LeftHand",
    "RightUpperArm", "RightLowerArm", "RightHand", "LeftUpperLeg", "LeftLowerLeg", 
    "LeftFoot", "RightUpperLeg", "RightLowerLeg", "RightFoot"
}

-- Хранилище подсветок
local BodyHighlights = {}

-- Функция определения типа аватара
local function GetAvatarType(character)
    if character and character:FindFirstChild("Humanoid") then
        return character.Humanoid.RigType == Enum.HumanoidRigType.R6 and "R6" or "R15"
    end
    return "Unknown"
end

-- Создание подсветки
local function CreateBodyHighlight(character)
    if not character or not HighlightSettings.Active then return end
    
    local avatarType = GetAvatarType(character)
    if (avatarType == "R6" and not HighlightSettings.HighlightR6) or 
       (avatarType == "R15" and not HighlightSettings.HighlightR15) then
        return
    end
    
    -- Удаляем старые подсветки
    if BodyHighlights[character] then
        for _, highlight in pairs(BodyHighlights[character]) do
            if highlight then highlight:Destroy() end
        end
    end
    
    local partsToHighlight = avatarType == "R6" and R6BodyParts or R15BodyParts
    local highlights = {}
    local color = HighlightSettings.UsePlayerColor and character:FindFirstChild("Head") and character.Head.Color or HighlightSettings.Color
    
    for _, partName in pairs(partsToHighlight) do
        local part = character:FindFirstChild(partName)
        if part then
            local highlight = Instance.new("BoxHandleAdornment")
            highlight.Name = "BodyHighlight"
            highlight.Adornee = part
            highlight.AlwaysOnTop = true
            highlight.ZIndex = 5
            highlight.Size = part.Size * 1.05
            highlight.Transparency = HighlightSettings.Transparency
            highlight.Color3 = color
            highlight.Visible = true
            highlight.Parent = part
            table.insert(highlights, highlight)
        end
    end
    
    BodyHighlights[character] = highlights
end

-- Обновление подсветок
local function UpdateBodyHighlights()
    for character, highlights in pairs(BodyHighlights) do
        if character and character.Parent then
            local color = HighlightSettings.UsePlayerColor and character:FindFirstChild("Head") and character.Head.Color or HighlightSettings.Color
            for _, highlight in pairs(highlights) do
                if highlight and highlight.Adornee then
                    highlight.Color3 = color
                    highlight.Visible = HighlightSettings.Active
                end
            end
        else
            if highlights then
                for _, highlight in pairs(highlights) do
                    if highlight then highlight:Destroy() end
                end
            end
            BodyHighlights[character] = nil
        end
    end
end

-- Обработчики персонажей
local function OnCharacterAdded(character)
    CreateBodyHighlight(character)
    
    character.ChildAdded:Connect(function(child)
        if table.find(R6BodyParts, child.Name) or table.find(R15BodyParts, child.Name) then
            CreateBodyHighlight(character)
        end
    end)
    
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        if BodyHighlights[character] then
            for _, highlight in pairs(BodyHighlights[character]) do
                if highlight then highlight:Destroy() end
            end
            BodyHighlights[character] = nil
        end
    end)
end

local function OnPlayerAdded(player)
    player.CharacterAdded:Connect(OnCharacterAdded)
    if player.Character then
        OnCharacterAdded(player.Character)
    end
end

-- Инициализация игроков
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        OnPlayerAdded(player)
    end
end

Players.PlayerRemoving:Connect(function(player)
    if player.Character and BodyHighlights[player.Character] then
        for _, highlight in pairs(BodyHighlights[player.Character]) do
            if highlight then highlight:Destroy() end
        end
        BodyHighlights[player.Character] = nil
    end
end)

-- Создание GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BodyHighlightGUI"
ScreenGui.Parent = game:GetService("CoreGui")

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 250, 0, 250)
MainFrame.Position = UDim2.new(0.5, -125, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Visible = true
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 6)
UICorner.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -30, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Body Highlight"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Font = Enum.Font.GothamBold
Title.TextSize = 14
Title.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
CloseButton.BorderSizePixel = 0
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 14
CloseButton.Parent = TitleBar

-- Content Frame
local Content = Instance.new("Frame")
Content.Name = "Content"
Content.Size = UDim2.new(1, -10, 1, -40)
Content.Position = UDim2.new(0, 5, 0, 35)
Content.BackgroundTransparency = 1
Content.Parent = MainFrame

-- Distance Slider
local DistanceSlider = Instance.new("Frame")
DistanceSlider.Name = "DistanceSlider"
DistanceSlider.Size = UDim2.new(1, 0, 0, 40)
DistanceSlider.BackgroundTransparency = 1
DistanceSlider.Parent = Content

local DistanceLabel = Instance.new("TextLabel")
DistanceLabel.Name = "DistanceLabel"
DistanceLabel.Size = UDim2.new(1, 0, 0, 15)
DistanceLabel.Text = "Distance: " .. HighlightSettings.Distance
DistanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
DistanceLabel.TextXAlignment = Enum.TextXAlignment.Left
DistanceLabel.Font = Enum.Font.Gotham
DistanceLabel.TextSize = 12
DistanceLabel.BackgroundTransparency = 1
DistanceLabel.Parent = DistanceSlider

local SliderTrack = Instance.new("Frame")
SliderTrack.Name = "SliderTrack"
SliderTrack.Size = UDim2.new(1, 0, 0, 5)
SliderTrack.Position = UDim2.new(0, 0, 0, 20)
SliderTrack.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SliderTrack.BorderSizePixel = 0
SliderTrack.Parent = DistanceSlider

local SliderFill = Instance.new("Frame")
SliderFill.Name = "SliderFill"
SliderFill.Size = UDim2.new(HighlightSettings.Distance / 500, 0, 1, 0)
SliderFill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
SliderFill.BorderSizePixel = 0
SliderFill.Parent = SliderTrack

local SliderHandle = Instance.new("TextButton")
SliderHandle.Name = "SliderHandle"
SliderHandle.Size = UDim2.new(0, 15, 0, 15)
SliderHandle.Position = UDim2.new(HighlightSettings.Distance / 500, -7, 0.5, -7)
SliderHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SliderHandle.Text = ""
SliderHandle.Parent = SliderTrack

-- Color Button
local ColorButton = Instance.new("TextButton")
ColorButton.Name = "ColorButton"
ColorButton.Size = UDim2.new(1, 0, 0, 25)
ColorButton.Position = UDim2.new(0, 0, 0, 50)
ColorButton.BackgroundColor3 = HighlightSettings.Color
ColorButton.Text = "Highlight Color"
ColorButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ColorButton.Font = Enum.Font.Gotham
ColorButton.TextSize = 12
ColorButton.Parent = Content

-- Skin Color Button
local SkinColorButton = Instance.new("TextButton")
SkinColorButton.Name = "SkinColorButton"
SkinColorButton.Size = UDim2.new(1, 0, 0, 25)
SkinColorButton.Position = UDim2.new(0, 0, 0, 80)
SkinColorButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
SkinColorButton.Text = "Use Player Color"
SkinColorButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SkinColorButton.Font = Enum.Font.Gotham
SkinColorButton.TextSize = 12
SkinColorButton.Parent = Content

-- R6/R15 Buttons
local R6Button = Instance.new("TextButton")
R6Button.Name = "R6Button"
R6Button.Size = UDim2.new(0.48, 0, 0, 25)
R6Button.Position = UDim2.new(0, 0, 0, 110)
R6Button.BackgroundColor3 = HighlightSettings.HighlightR6 and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
R6Button.Text = "R6: " .. (HighlightSettings.HighlightR6 and "ON" or "OFF")
R6Button.TextColor3 = Color3.fromRGB(255, 255, 255)
R6Button.Font = Enum.Font.Gotham
R6Button.TextSize = 12
R6Button.Parent = Content

local R15Button = Instance.new("TextButton")
R15Button.Name = "R15Button"
R15Button.Size = UDim2.new(0.48, 0, 0, 25)
R15Button.Position = UDim2.new(0.52, 0, 0, 110)
R15Button.BackgroundColor3 = HighlightSettings.HighlightR15 and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
R15Button.Text = "R15: " .. (HighlightSettings.HighlightR15 and "ON" or "OFF")
R15Button.TextColor3 = Color3.fromRGB(255, 255, 255)
R15Button.Font = Enum.Font.Gotham
R15Button.TextSize = 12
R15Button.Parent = Content

-- Toggle Button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(1, 0, 0, 25)
ToggleButton.Position = UDim2.new(0, 0, 0, 140)
ToggleButton.BackgroundColor3 = HighlightSettings.Active and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
ToggleButton.Text = HighlightSettings.Active and "ON" or "OFF"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 14
ToggleButton.Parent = Content

-- Добавляем скругления углов
for _, button in pairs({ColorButton, SkinColorButton, R6Button, R15Button, ToggleButton}) do
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = button
end

for _, frame in pairs({SliderTrack, SliderFill, SliderHandle}) do
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = frame
end

-- Функция перетаскивания окна
local dragging
local dragInput
local dragStart
local startPos

local function updateInput(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)

-- Обработчики кнопок
local function UpdateAllHighlights()
    if HighlightSettings.Active then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                CreateBodyHighlight(player.Character)
            end
        end
    else
        for character, highlights in pairs(BodyHighlights) do
            if highlights then
                for _, highlight in pairs(highlights) do
                    if highlight then highlight:Destroy() end
                end
            end
        end
        BodyHighlights = {}
    end
end

ColorButton.MouseButton1Click:Connect(function()
    HighlightSettings.Color = Color3.fromRGB(math.random(255), math.random(255), math.random(255))
    ColorButton.BackgroundColor3 = HighlightSettings.Color
    HighlightSettings.UsePlayerColor = false
    SkinColorButton.Text = "Use Player Color"
    UpdateAllHighlights()
end)

SkinColorButton.MouseButton1Click:Connect(function()
    HighlightSettings.UsePlayerColor = not HighlightSettings.UsePlayerColor
    SkinColorButton.Text = HighlightSettings.UsePlayerColor and "Using Player Color" or "Use Player Color"
    UpdateAllHighlights()
end)

R6Button.MouseButton1Click:Connect(function()
    HighlightSettings.HighlightR6 = not HighlightSettings.HighlightR6
    R6Button.Text = "R6: " .. (HighlightSettings.HighlightR6 and "ON" or "OFF")
    R6Button.BackgroundColor3 = HighlightSettings.HighlightR6 and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
    UpdateAllHighlights()
end)

R15Button.MouseButton1Click:Connect(function()
    HighlightSettings.HighlightR15 = not HighlightSettings.HighlightR15
    R15Button.Text = "R15: " .. (HighlightSettings.HighlightR15 and "ON" or "OFF")
    R15Button.BackgroundColor3 = HighlightSettings.HighlightR15 and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
    UpdateAllHighlights()
end)

ToggleButton.MouseButton1Click:Connect(function()
    HighlightSettings.Active = not HighlightSettings.Active
    ToggleButton.Text = HighlightSettings.Active and "ON" or "OFF"
    ToggleButton.BackgroundColor3 = HighlightSettings.Active and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
    UpdateAllHighlights()
end)

CloseButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
end)

-- Ползунок расстояния
local sliderDragging = false

SliderHandle.MouseButton1Down:Connect(function()
    sliderDragging = true
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        sliderDragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if sliderDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local xPos = math.clamp((input.Position.X - SliderTrack.AbsolutePosition.X) / SliderTrack.AbsoluteSize.X, 0, 1)
        local value = math.floor(50 + (500 - 50) * xPos)
        HighlightSettings.Distance = value
        DistanceLabel.Text = "Distance: " .. value
        SliderFill.Size = UDim2.new(xPos, 0, 1, 0)
        SliderHandle.Position = UDim2.new(xPos, -7, 0.5, -7)
    end
end)

-- Горячая клавиша F5
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.F5 then
        MainFrame.Visible = not MainFrame.Visible
    end
end)

print("Body Highlight loaded! Press F5 to toggle GUI.")
